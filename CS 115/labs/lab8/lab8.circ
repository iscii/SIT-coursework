<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
  This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).

  <lib desc="#Wiring" name="0">
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Base" name="2">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="ParityGenerator"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="2" map="Button2" name="Menu Tool"/>
    <tool lib="2" map="Button3" name="Menu Tool"/>
    <tool lib="2" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="2" name="Poke Tool"/>
    <tool lib="2" name="Edit Tool"/>
    <tool lib="2" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="facing" val="south"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="XOR">
    <a name="circuit" val="XOR"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <appear>
      <circ-port height="10" pin="350,410" width="10" x="95" y="65"/>
      <circ-port height="8" pin="140,310" width="8" x="86" y="46"/>
      <circ-port height="8" pin="70,310" width="8" x="66" y="46"/>
      <path d="M71,51 Q75,61 79,51" fill="none" stroke="#808080" stroke-width="2"/>
      <rect fill="none" height="30" stroke="#000000" stroke-width="2" width="50" x="50" y="50"/>
      <circ-anchor facing="east" height="6" width="6" x="97" y="57"/>
    </appear>
    <comp lib="0" loc="(350,410)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="0" loc="(70,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="0" loc="(140,310)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="2" loc="(314,250)" name="Text">
      <a name="text" val="Use minterm expansion to create an XOR gate using AND + OR gates"/>
    </comp>
  </circuit>
  <circuit name="ParityGenerator">
    <a name="circuit" val="ParityGenerator"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(1060,230)" to="(1060,250)"/>
    <wire from="(1060,270)" to="(1060,290)"/>
    <wire from="(140,80)" to="(140,340)"/>
    <wire from="(70,80)" to="(70,470)"/>
    <wire from="(550,520)" to="(590,520)"/>
    <wire from="(390,330)" to="(390,350)"/>
    <wire from="(390,370)" to="(390,390)"/>
    <wire from="(70,470)" to="(500,470)"/>
    <wire from="(70,530)" to="(500,530)"/>
    <wire from="(400,230)" to="(400,310)"/>
    <wire from="(1020,290)" to="(1060,290)"/>
    <wire from="(350,390)" to="(390,390)"/>
    <wire from="(590,460)" to="(590,480)"/>
    <wire from="(590,500)" to="(590,520)"/>
    <wire from="(470,360)" to="(470,450)"/>
    <wire from="(140,340)" to="(300,340)"/>
    <wire from="(140,400)" to="(300,400)"/>
    <wire from="(210,320)" to="(300,320)"/>
    <wire from="(210,380)" to="(300,380)"/>
    <wire from="(470,450)" to="(500,450)"/>
    <wire from="(470,510)" to="(500,510)"/>
    <wire from="(650,490)" to="(670,490)"/>
    <wire from="(670,490)" to="(690,490)"/>
    <wire from="(1060,250)" to="(1070,250)"/>
    <wire from="(1060,270)" to="(1070,270)"/>
    <wire from="(140,400)" to="(140,570)"/>
    <wire from="(70,530)" to="(70,570)"/>
    <wire from="(450,360)" to="(470,360)"/>
    <wire from="(400,230)" to="(420,230)"/>
    <wire from="(390,350)" to="(400,350)"/>
    <wire from="(390,370)" to="(400,370)"/>
    <wire from="(350,330)" to="(360,330)"/>
    <wire from="(210,80)" to="(210,320)"/>
    <wire from="(400,310)" to="(670,310)"/>
    <wire from="(1020,230)" to="(1030,230)"/>
    <wire from="(470,450)" to="(470,510)"/>
    <wire from="(470,510)" to="(470,570)"/>
    <wire from="(210,380)" to="(210,570)"/>
    <wire from="(70,470)" to="(70,530)"/>
    <wire from="(1120,260)" to="(1140,260)"/>
    <wire from="(140,340)" to="(140,400)"/>
    <wire from="(550,460)" to="(560,460)"/>
    <wire from="(670,310)" to="(670,490)"/>
    <wire from="(210,320)" to="(210,380)"/>
    <wire from="(590,480)" to="(600,480)"/>
    <wire from="(590,500)" to="(600,500)"/>
    <comp lib="0" loc="(70,80)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="2" loc="(566,115)" name="Text">
      <a name="text" val="WRITE YOUR NAME AND PLEDGE SOMEWHERE IN THIS CIRCUIT"/>
    </comp>
    <comp lib="2" loc="(1053,182)" name="Text">
      <a name="text" val="XOR Circuit"/>
    </comp>
    <comp lib="1" loc="(390,330)" name="NOT Gate"/>
    <comp lib="1" loc="(1020,290)" name="OR Gate"/>
    <comp lib="1" loc="(350,390)" name="OR Gate"/>
    <comp lib="1" loc="(550,460)" name="AND Gate"/>
    <comp lib="2" loc="(540,57)" name="Text">
      <a name="text" val="the output = 1 if an odd number of inputs (1 or 3) are 1, otherwise 0"/>
    </comp>
    <comp lib="2" loc="(554,78)" name="Text">
      <a name="text" val="ONLY use: NOT, AND, OR, and any custom functions you write (included in the .circ submission)"/>
    </comp>
    <comp lib="1" loc="(450,360)" name="AND Gate"/>
    <comp lib="2" loc="(434,183)" name="Text">
      <a name="text" val="Output Bit"/>
    </comp>
    <comp lib="1" loc="(1060,230)" name="NOT Gate"/>
    <comp lib="1" loc="(590,460)" name="NOT Gate"/>
    <comp lib="2" loc="(141,27)" name="Text">
      <a name="text" val="Input Bits"/>
    </comp>
    <comp lib="0" loc="(690,490)" name="Probe"/>
    <comp lib="2" loc="(1071,118)" name="Text">
      <a name="text" val="I pledge my honor that I have abided by the Stevens Honor System."/>
    </comp>
    <comp lib="2" loc="(1051,93)" name="Text">
      <a name="text" val="Issac Zheng"/>
    </comp>
    <comp lib="0" loc="(210,80)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="Z"/>
    </comp>
    <comp lib="0" loc="(140,80)" name="Pin">
      <a name="tristate" val="false"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="1" loc="(350,330)" name="AND Gate"/>
    <comp lib="1" loc="(550,520)" name="OR Gate"/>
    <comp lib="0" loc="(420,230)" name="Pin">
      <a name="output" val="true"/>
      <a name="tristate" val="false"/>
      <a name="label" val="Parity"/>
    </comp>
    <comp lib="2" loc="(497,68)" name="Text"/>
    <comp lib="1" loc="(1120,260)" name="AND Gate"/>
    <comp lib="2" loc="(523,27)" name="Text">
      <a name="text" val="Write your parity circuit here"/>
    </comp>
    <comp lib="1" loc="(1020,230)" name="AND Gate"/>
    <comp lib="1" loc="(650,490)" name="AND Gate"/>
  </circuit>
</project>
